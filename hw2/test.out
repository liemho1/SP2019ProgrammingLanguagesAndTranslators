TOKEN: IDENT 		 LEXEME: fifty_five
TOKEN: ASSIGN 		 LEXEME: =
INDEX ->  epsilon
TOKEN: LPAREN 		 LEXEME: (
TOKEN: LPAREN 		 LEXEME: (
TOKEN: LPAREN 		 LEXEME: (
TOKEN: LPAREN 		 LEXEME: (
TOKEN: INTCONST 		 LEXEME: 3
CONST -> INTCONST
FACTOR -> CONST
TOKEN: POWER 		 LEXEME: ^
MULT_OP -> ^
TOKEN: LPAREN 		 LEXEME: (
TOKEN: INTCONST 		 LEXEME: 4
CONST -> INTCONST
FACTOR -> CONST
TOKEN: GT 		 LEXEME: >
MULT_OP_LIST -> epsilon
TERM -> FACTOR MULT_OP_LIST
ADD_OP_LIST -> epsilon
SIMPLE_ARITHLOGIC -> TERM ADD_OP_LIST
REL_OP -> >
TOKEN: INTCONST 		 LEXEME: 3
CONST -> INTCONST
FACTOR -> CONST
TOKEN: RPAREN 		 LEXEME: )
MULT_OP_LIST -> epsilon
TERM -> FACTOR MULT_OP_LIST
ADD_OP_LIST -> epsilon
SIMPLE_ARITHLOGIC -> TERM ADD_OP_LIST
ARITHLOGIC_EXPR -> SIMPLE_ARITHLOGIC REL_OP SIMPLE_ARITHLOGIC
EXPR -> ARITHLOGIC_EXPR
FACTOR -> ( EXPR )
TOKEN: NE 		 LEXEME: !=
MULT_OP_LIST -> epsilon
MULT_OP_LIST -> MULT_OP FACTOR MULT_OP_LIST
TERM -> FACTOR MULT_OP_LIST
ADD_OP_LIST -> epsilon
SIMPLE_ARITHLOGIC -> TERM ADD_OP_LIST
REL_OP -> !=
TOKEN: LPAREN 		 LEXEME: (
TOKEN: IDENT 		 LEXEME: fifty
TOKEN: MOD 		 LEXEME: %%
ENTIRE_VAR -> IDENT
VAR -> ENTIRE_VAR
FACTOR -> VAR
MULT_OP -> %%
TOKEN: IDENT 		 LEXEME: seventy
TOKEN: RPAREN 		 LEXEME: )
ENTIRE_VAR -> IDENT
VAR -> ENTIRE_VAR
FACTOR -> VAR
MULT_OP_LIST -> epsilon
MULT_OP_LIST -> MULT_OP FACTOR MULT_OP_LIST
TERM -> FACTOR MULT_OP_LIST
ADD_OP_LIST -> epsilon
SIMPLE_ARITHLOGIC -> TERM ADD_OP_LIST
ARITHLOGIC_EXPR -> SIMPLE_ARITHLOGIC
EXPR -> ARITHLOGIC_EXPR
FACTOR -> ( EXPR )
TOKEN: RPAREN 		 LEXEME: )
MULT_OP_LIST -> epsilon
TERM -> FACTOR MULT_OP_LIST
ADD_OP_LIST -> epsilon
SIMPLE_ARITHLOGIC -> TERM ADD_OP_LIST
ARITHLOGIC_EXPR -> SIMPLE_ARITHLOGIC REL_OP SIMPLE_ARITHLOGIC
EXPR -> ARITHLOGIC_EXPR
FACTOR -> ( EXPR )
TOKEN: RPAREN 		 LEXEME: )
MULT_OP_LIST -> epsilon
TERM -> FACTOR MULT_OP_LIST
ADD_OP_LIST -> epsilon
SIMPLE_ARITHLOGIC -> TERM ADD_OP_LIST
ARITHLOGIC_EXPR -> SIMPLE_ARITHLOGIC
EXPR -> ARITHLOGIC_EXPR
FACTOR -> ( EXPR )
TOKEN: RPAREN 		 LEXEME: )
MULT_OP_LIST -> epsilon
TERM -> FACTOR MULT_OP_LIST
ADD_OP_LIST -> epsilon
SIMPLE_ARITHLOGIC -> TERM ADD_OP_LIST
ARITHLOGIC_EXPR -> SIMPLE_ARITHLOGIC
EXPR -> ARITHLOGIC_EXPR
FACTOR -> ( EXPR )
TOKEN: DIV 		 LEXEME: /
MULT_OP -> /
TOKEN: LPAREN 		 LEXEME: (
TOKEN: INTCONST 		 LEXEME: 7
CONST -> INTCONST
FACTOR -> CONST
TOKEN: LE 		 LEXEME: <=
MULT_OP_LIST -> epsilon
TERM -> FACTOR MULT_OP_LIST
ADD_OP_LIST -> epsilon
SIMPLE_ARITHLOGIC -> TERM ADD_OP_LIST
REL_OP -> <=
TOKEN: LPAREN 		 LEXEME: (
TOKEN: NOT 		 LEXEME: !
TOKEN: IDENT 		 LEXEME: steak
TOKEN: OR 		 LEXEME: |
ENTIRE_VAR -> IDENT
VAR -> ENTIRE_VAR
FACTOR -> VAR
FACTOR -> ! FACTOR
MULT_OP_LIST -> epsilon
TERM -> FACTOR MULT_OP_LIST
ADD_OP -> |
TOKEN: LPAREN 		 LEXEME: (
TOKEN: IDENT 		 LEXEME: chicken
TOKEN: EQ 		 LEXEME: ==
ENTIRE_VAR -> IDENT
VAR -> ENTIRE_VAR
FACTOR -> VAR
MULT_OP_LIST -> epsilon
TERM -> FACTOR MULT_OP_LIST
ADD_OP_LIST -> epsilon
SIMPLE_ARITHLOGIC -> TERM ADD_OP_LIST
REL_OP -> ==
TOKEN: IDENT 		 LEXEME: bird
TOKEN: RPAREN 		 LEXEME: )
ENTIRE_VAR -> IDENT
VAR -> ENTIRE_VAR
FACTOR -> VAR
MULT_OP_LIST -> epsilon
TERM -> FACTOR MULT_OP_LIST
ADD_OP_LIST -> epsilon
SIMPLE_ARITHLOGIC -> TERM ADD_OP_LIST
ARITHLOGIC_EXPR -> SIMPLE_ARITHLOGIC REL_OP SIMPLE_ARITHLOGIC
EXPR -> ARITHLOGIC_EXPR
FACTOR -> ( EXPR )
TOKEN: RPAREN 		 LEXEME: )
MULT_OP_LIST -> epsilon
TERM -> FACTOR MULT_OP_LIST
ADD_OP_LIST -> epsilon
ADD_OP_LIST -> ADD_OP TERM ADD_OP_LIST
SIMPLE_ARITHLOGIC -> TERM ADD_OP_LIST
ARITHLOGIC_EXPR -> SIMPLE_ARITHLOGIC
EXPR -> ARITHLOGIC_EXPR
FACTOR -> ( EXPR )
TOKEN: RPAREN 		 LEXEME: )
MULT_OP_LIST -> epsilon
TERM -> FACTOR MULT_OP_LIST
ADD_OP_LIST -> epsilon
SIMPLE_ARITHLOGIC -> TERM ADD_OP_LIST
ARITHLOGIC_EXPR -> SIMPLE_ARITHLOGIC REL_OP SIMPLE_ARITHLOGIC
EXPR -> ARITHLOGIC_EXPR
FACTOR -> ( EXPR )
TOKEN: RPAREN 		 LEXEME: )
MULT_OP_LIST -> epsilon
MULT_OP_LIST -> MULT_OP FACTOR MULT_OP_LIST
TERM -> FACTOR MULT_OP_LIST
ADD_OP_LIST -> epsilon
SIMPLE_ARITHLOGIC -> TERM ADD_OP_LIST
ARITHLOGIC_EXPR -> SIMPLE_ARITHLOGIC
EXPR -> ARITHLOGIC_EXPR
FACTOR -> ( EXPR )
TOKEN: GE 		 LEXEME: >=
MULT_OP_LIST -> epsilon
TERM -> FACTOR MULT_OP_LIST
ADD_OP_LIST -> epsilon
SIMPLE_ARITHLOGIC -> TERM ADD_OP_LIST
REL_OP -> >=
TOKEN: LPAREN 		 LEXEME: (
TOKEN: INTCONST 		 LEXEME: 9
CONST -> INTCONST
FACTOR -> CONST
TOKEN: SUB 		 LEXEME: -
MULT_OP_LIST -> epsilon
TERM -> FACTOR MULT_OP_LIST
ADD_OP -> -
TOKEN: LPAREN 		 LEXEME: (
TOKEN: TRUE 		 LEXEME: TRUE
CONST -> TRUE
FACTOR -> CONST
TOKEN: AND 		 LEXEME: &
MULT_OP -> &
TOKEN: LPAREN 		 LEXEME: (
TOKEN: IDENT 		 LEXEME: watermelon
TOKEN: LBRACKET 		 LEXEME: [
TOKEN: LBRACKET 		 LEXEME: [
TOKEN: INTCONST 		 LEXEME: 3
CONST -> INTCONST
FACTOR -> CONST
TOKEN: RBRACKET 		 LEXEME: ]
MULT_OP_LIST -> epsilon
TERM -> FACTOR MULT_OP_LIST
ADD_OP_LIST -> epsilon
SIMPLE_ARITHLOGIC -> TERM ADD_OP_LIST
ARITHLOGIC_EXPR -> SIMPLE_ARITHLOGIC
EXPR -> ARITHLOGIC_EXPR
TOKEN: RBRACKET 		 LEXEME: ]
TOKEN: RPAREN 		 LEXEME: )
SINGLE_ELEMENT -> IDENT [[ EXPR ]]
VAR -> SINGLE_ELEMENT
FACTOR -> VAR
MULT_OP_LIST -> epsilon
TERM -> FACTOR MULT_OP_LIST
ADD_OP_LIST -> epsilon
SIMPLE_ARITHLOGIC -> TERM ADD_OP_LIST
ARITHLOGIC_EXPR -> SIMPLE_ARITHLOGIC
EXPR -> ARITHLOGIC_EXPR
FACTOR -> ( EXPR )
TOKEN: RPAREN 		 LEXEME: )
MULT_OP_LIST -> epsilon
MULT_OP_LIST -> MULT_OP FACTOR MULT_OP_LIST
TERM -> FACTOR MULT_OP_LIST
ADD_OP_LIST -> epsilon
SIMPLE_ARITHLOGIC -> TERM ADD_OP_LIST
ARITHLOGIC_EXPR -> SIMPLE_ARITHLOGIC
EXPR -> ARITHLOGIC_EXPR
FACTOR -> ( EXPR )
TOKEN: MULT 		 LEXEME: *
MULT_OP -> *
TOKEN: LPAREN 		 LEXEME: (
TOKEN: IDENT 		 LEXEME: taco
TOKEN: LT 		 LEXEME: <
ENTIRE_VAR -> IDENT
VAR -> ENTIRE_VAR
FACTOR -> VAR
MULT_OP_LIST -> epsilon
TERM -> FACTOR MULT_OP_LIST
ADD_OP_LIST -> epsilon
SIMPLE_ARITHLOGIC -> TERM ADD_OP_LIST
REL_OP -> <
TOKEN: LPAREN 		 LEXEME: (
TOKEN: IDENT 		 LEXEME: tacos
TOKEN: POWER 		 LEXEME: ^
ENTIRE_VAR -> IDENT
VAR -> ENTIRE_VAR
FACTOR -> VAR
MULT_OP -> ^
TOKEN: INTCONST 		 LEXEME: 2
CONST -> INTCONST
FACTOR -> CONST
TOKEN: RPAREN 		 LEXEME: )
MULT_OP_LIST -> epsilon
MULT_OP_LIST -> MULT_OP FACTOR MULT_OP_LIST
TERM -> FACTOR MULT_OP_LIST
ADD_OP_LIST -> epsilon
SIMPLE_ARITHLOGIC -> TERM ADD_OP_LIST
ARITHLOGIC_EXPR -> SIMPLE_ARITHLOGIC
EXPR -> ARITHLOGIC_EXPR
FACTOR -> ( EXPR )
TOKEN: RPAREN 		 LEXEME: )
MULT_OP_LIST -> epsilon
TERM -> FACTOR MULT_OP_LIST
ADD_OP_LIST -> epsilon
SIMPLE_ARITHLOGIC -> TERM ADD_OP_LIST
ARITHLOGIC_EXPR -> SIMPLE_ARITHLOGIC REL_OP SIMPLE_ARITHLOGIC
EXPR -> ARITHLOGIC_EXPR
FACTOR -> ( EXPR )
TOKEN: RPAREN 		 LEXEME: )
MULT_OP_LIST -> epsilon
MULT_OP_LIST -> MULT_OP FACTOR MULT_OP_LIST
TERM -> FACTOR MULT_OP_LIST
ADD_OP_LIST -> epsilon
ADD_OP_LIST -> ADD_OP TERM ADD_OP_LIST
SIMPLE_ARITHLOGIC -> TERM ADD_OP_LIST
ARITHLOGIC_EXPR -> SIMPLE_ARITHLOGIC
EXPR -> ARITHLOGIC_EXPR
FACTOR -> ( EXPR )
MULT_OP_LIST -> epsilon
TERM -> FACTOR MULT_OP_LIST
ADD_OP_LIST -> epsilon
SIMPLE_ARITHLOGIC -> TERM ADD_OP_LIST
ARITHLOGIC_EXPR -> SIMPLE_ARITHLOGIC REL_OP SIMPLE_ARITHLOGIC
EXPR -> ARITHLOGIC_EXPR
ASSIGNMENT_EXPR -> IDENT INDEX ASSIGN EXPR
EXPR -> ASSIGNMENT_EXPR
START -> EXPR

---- Completed parsing ----

